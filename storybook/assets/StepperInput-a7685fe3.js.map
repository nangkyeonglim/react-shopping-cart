{"version":3,"file":"StepperInput-a7685fe3.js","sources":["../../src/assets/triangle.svg","../../src/assets/triangle-down.svg","../../src/components/@common/StepperInput/StepperInput.styles.tsx","../../src/utils/validation.ts","../../src/components/@common/StepperInput/StepperInput.tsx"],"sourcesContent":["export default \"__VITE_ASSET__c50acebe__\"","export default \"__VITE_ASSET__b55ca7da__\"","import styled from 'styled-components';\n\nexport const StepperInputWrapper = styled.div`\n  display: flex;\n`;\n\nexport const Input = styled.input`\n  border: 1px solid #ddd;\n  width: 42px;\n  height: 28px;\n  padding-left: 4px;\n`;\n\nexport const StepperWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Stepper = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: var(--color-white);\n  border: 1px solid #ddd;\n  width: 24px;\n  height: 14px;\n  font-size: 4px;\n  cursor: pointer;\n`;\n","const regEx = {\n  Number: /^[0-9]+$/,\n};\n\nexport const isNumber = (target: string) => {\n  return regEx.Number.test(target);\n};\n","import UpTriangle from '../../../assets/triangle.svg';\nimport DownTriangle from '../../../assets/triangle-down.svg';\nimport { ChangeEvent, useEffect, useState } from 'react';\nimport * as Styled from './StepperInput.styles';\nimport { isNumber } from '../../../utils/validation';\n\ntype StepperInputProps = {\n  min?: number;\n  max?: number;\n  step?: number;\n  initialValue?: number;\n  getValue: (value: number) => void;\n};\n\nconst StepperInput = ({ min = 0, max = 99, step = 1, initialValue = 0, getValue }: StepperInputProps) => {\n  const [inputValue, setInputValue] = useState(String(initialValue));\n\n  useEffect(() => {\n    if (inputValue !== '') getValue(Number(inputValue));\n  }, [getValue, inputValue]);\n\n  const handleChangeInput = (e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.value === '') setInputValue('');\n    if (!isNumber(e.target.value)) return;\n\n    const currentValue = Number(e.target.value);\n\n    if (currentValue >= min && currentValue <= max) setInputValue(String(currentValue));\n  };\n\n  const handleBlurInput = (e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.value === '') setInputValue(String(min));\n  };\n\n  const handleIncreaseStepper = () => {\n    const NextValue = Number(inputValue) + step;\n\n    if (NextValue <= max) setInputValue(String(NextValue));\n  };\n\n  const handleDecreaseStepper = () => {\n    const NextValue = Number(inputValue) - step;\n\n    if (NextValue >= min) setInputValue(String(NextValue));\n  };\n\n  return (\n    <Styled.StepperInputWrapper>\n      <Styled.Input type='text' value={inputValue} onChange={handleChangeInput} onBlur={handleBlurInput} />\n      <Styled.StepperWrapper>\n        <Styled.Stepper type='button' onClick={handleIncreaseStepper}>\n          <img src={UpTriangle} alt='수량올리기' />\n        </Styled.Stepper>\n        <Styled.Stepper type='button' onClick={handleDecreaseStepper}>\n          <img src={DownTriangle} alt='수량내리기' />\n        </Styled.Stepper>\n      </Styled.StepperWrapper>\n    </Styled.StepperInputWrapper>\n  );\n};\n\nexport default StepperInput;\n"],"names":["UpTriangle","DownTriangle","StepperInputWrapper","styled","Input","StepperWrapper","Stepper","regEx","Number","isNumber","target","test","StepperInput","min","max","step","initialValue","getValue","inputValue","setInputValue","useState","useEffect","handleChangeInput","currentValue","handleBlurInput","handleIncreaseStepper","NextValue","handleDecreaseStepper","jsxs","Styled.StepperInputWrapper","jsx","Styled.Input","Styled.StepperWrapper","Styled.Stepper"],"mappings":"sJAAA,MAAeA,EAAA,GAAA,IAAA,IAAA,wBAAA,YAAA,GAAA,EAAA,KCAAC,EAAA,GAAA,IAAA,IAAA,6BAAA,YAAA,GAAA,EAAA,KCERC,EAAAC,EAAA;AAAA;AAAA,EAIAC,EAAAD,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOAE,EAAAF,EAAA;AAAA;AAAA;AAAA,EAKAG,EAAAH,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4mCClBP,MAAMI,EAAQ,CACZC,OAAQ,UACV,EAEaC,EAAYC,GAChBH,EAAMC,OAAOG,KAAKD,CAAM,ECSjCE,EAAA,CAAA,CAAsB,IAAAC,EAAA,EAAQ,IAAAC,EAAA,GAAS,KAAAC,EAAA,EAAW,aAAAC,EAAA,EAAkB,SAAAC,CAA+B,IAAA,CACjG,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAA,OAAAJ,CAAA,CAAA,EAEAK,EAAAA,UAAAA,IAAAA,CACEH,IAAA,IAAuBD,EAAAA,OAAAA,CAAAA,CAAAA,CAA2B,EAAA,CAAAA,EAAAC,CAAA,CAAA,EAGpD,MAAAI,EAAA,GAAA,CAEE,GADA,EAAA,OAAA,QAAA,IAA2BH,EAAAA,EAAAA,EAC3B,CAAAV,EAAA,EAAA,OAAA,KAAA,EAA+B,OAE/B,MAAAc,EAAA,OAAA,EAAA,OAAA,KAAA,EAEAA,GAAAV,GAAAU,GAAAT,GAAgDK,EAAAA,OAAAA,CAAAA,CAAAA,CAAkC,EAGpFK,EAAA,GAAA,CACE,EAAA,OAAA,QAAA,IAA2BL,EAAAA,OAAAA,CAAAA,CAAAA,CAAyB,EAGtDM,EAAA,IAAA,CACE,MAAAC,EAAA,OAAAR,CAAA,EAAAH,EAEAW,GAAAZ,GAAsBK,EAAAA,OAAAA,CAAAA,CAAAA,CAA+B,EAGvDQ,EAAA,IAAA,CACE,MAAAD,EAAA,OAAAR,CAAA,EAAAH,EAEAW,GAAAb,GAAsBM,EAAAA,OAAAA,CAAAA,CAAAA,CAA+B,EAGvD,OAAAS,EAAA,KAAAC,EAAA,CAAA,SAAA,CAEIC,EAAAA,IAAAC,EAAA,CAAA,KAAA,OAAA,MAAAb,EAAA,SAAAI,EAAA,OAAAE,CAAA,CAAA,EAAkGI,OAAAI,EAAA,CAAA,SAAA,CAEhGF,EAAA,IAAAG,EAAA,CAAA,KAAA,SAAA,QAAAR,EAAA,SAAAK,EAAA,IAAA,MAAA,CAAA,IAAA9B,EAAA,IAAA,OAAA,CAAA,EAAA,EAEA8B,EAAA,IAAAG,EAAA,CAAA,KAAA,SAAA,QAAAN,EAAA,SAAAG,EAAA,IAAA,MAAA,CAAA,IAAA7B,EAAA,IAAA,OAAA,CAAA,EAAA,CAGA,EAAA,CACF,CAAA,CAAA,CAGN"}